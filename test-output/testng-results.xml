<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-05T10:42:25 IST" name="Default suite" finished-at="2022-07-05T10:42:36 IST" duration-ms="11617">
    <groups>
    </groups>
    <test started-at="2022-07-05T10:42:25 IST" name="Default test" finished-at="2022-07-05T10:42:36 IST" duration-ms="11617">
      <class name="SpotifyAPI">
        <test-method is-config="true" signature="getToken()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:25 IST" name="getToken" finished-at="2022-07-05T10:42:25 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method is-config="true" signature="getTrack()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:25 IST" name="getTrack" finished-at="2022-07-05T10:42:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTrack -->
        <test-method signature="RemovePlaylistItem()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:25 IST" name="RemovePlaylistItem" finished-at="2022-07-05T10:42:31 IST" duration-ms="6182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemovePlaylistItem -->
        <test-method signature="TrackId()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:31 IST" name="TrackId" finished-at="2022-07-05T10:42:32 IST" duration-ms="454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TrackId -->
        <test-method signature="UpdatePlaylistItem()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:32 IST" name="UpdatePlaylistItem" finished-at="2022-07-05T10:42:32 IST" duration-ms="536" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at SpotifyAPI.UpdatePlaylistItem(SpotifyAPI.java:165)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdatePlaylistItem -->
        <test-method signature="searchForItem()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:32 IST" name="searchForItem" finished-at="2022-07-05T10:42:33 IST" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForItem -->
        <test-method signature="testAdd_Items_to_Playlist()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:33 IST" name="testAdd_Items_to_Playlist" finished-at="2022-07-05T10:42:33 IST" duration-ms="482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_Items_to_Playlist -->
        <test-method signature="testChange_Playlist_Details()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:33 IST" name="testChange_Playlist_Details" finished-at="2022-07-05T10:42:33 IST" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChange_Playlist_Details -->
        <test-method signature="testGetCurrent_Users_Playlists()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:33 IST" name="testGetCurrent_Users_Playlists" finished-at="2022-07-05T10:42:34 IST" duration-ms="442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCurrent_Users_Playlists -->
        <test-method signature="testGet_Playlist()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:34 IST" name="testGet_Playlist" finished-at="2022-07-05T10:42:34 IST" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_Playlist -->
        <test-method signature="testGet_Playlist_Items()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:34 IST" name="testGet_Playlist_Items" finished-at="2022-07-05T10:42:35 IST" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_Playlist_Items -->
        <test-method signature="testGet_Users_Playlists()[pri:0, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:35 IST" name="testGet_Users_Playlists" finished-at="2022-07-05T10:42:35 IST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_Users_Playlists -->
        <test-method signature="testGet_CurrentUsersProfile()[pri:1, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:35 IST" name="testGet_CurrentUsersProfile" finished-at="2022-07-05T10:42:36 IST" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_CurrentUsersProfile -->
        <test-method signature="testGet_Users_Profile()[pri:2, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:36 IST" name="testGet_Users_Profile" finished-at="2022-07-05T10:42:36 IST" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_Users_Profile -->
        <test-method signature="testCreate_Playlist()[pri:3, instance:SpotifyAPI@1e1a0406]" started-at="2022-07-05T10:42:36 IST" name="testCreate_Playlist" finished-at="2022-07-05T10:42:36 IST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate_Playlist -->
      </class> <!-- SpotifyAPI -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
